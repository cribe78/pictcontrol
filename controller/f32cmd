#!/usr/bin/perl

use Getopt::Long;
use IO::Socket::INET;
use warnings;
use strict;

# IA200 command
# A
# 00
# W   // write
# B   // inputs
# A   // video input
# B (RGB) or C (DVI)


my $scaler = 2;
my $command = '';
my $menu = '';
my $function = '';
my $subfunction = '';
my $value = '';
$|++;

my $result = GetOptions(
                "projector=s" => \$scaler,
                "command=s" => \$command,
                "menu=s" => \$menu,
                "function=s" => \$function,
                "subfunction=s" => \$subfunction,
                "value=s" => \$value );

my %ip_addrs = ( "1" => "0",
                 "2" => "1",
                 "3" => "2",
                 "4" => "3",
                 "5" => "4",
                 "FL" => "0",
                 "L" => "1",
                 "C" => "2",
                 "R" => "3",
                 "FR" => "4" );

my @all = ("1","2","3","4","5");

$scaler = uc($scaler);
if ( ! ($scaler eq "all" || defined($ip_addrs{$scaler}))) {
    print "invalid sprojector specified: $scaler\n";
}
my $addr = "192.168.1.10" . $ip_addrs{$scaler};

my $readwrite = "R";
if ($value) {
    $readwrite = "W";
}


if (! $command) { 
    if (! ($menu && $function)) {
        die "command or menu and function required";
    }
    if ( $menu eq "C" || 
         $menu eq "D" ||
         $menu eq "B" && $subfunction) {
        $readwrite = "W";
    }

    $command = $readwrite . $menu . $function . $subfunction . $value;

}

my $raw_command = ":" . $command . "\r";
#print "sending $raw_command";


my $sock = IO::Socket::INET->new(
                PeerAddr => $addr,
                PeerPort => '1025',
                Proto => 'tcp');
if (! $sock) { 
    die "could not open socket";
}

$sock->print($raw_command);
my $resp;


my $read = $sock->read($resp, 17);
print "$read bytes read\n";

print "$resp\n";

sub printHelp {
    my $help = <<END;
Summary: f32cmd --projector NUM --command CMD
Send a command to one of the REVE PICT F32 projectors.
Some useful commands: 
  POWR[0|1|?]   Projector power off/on/status
  LRM[1|2]?     Estimated remaining lamp time (1/2)
  LTR[1|2]?     Lamp runtime (1/2)
  LST[1|2]?     Lamp status (1/2) (0=broken, 1=warming, 2=on, 3=off, 4=cooling, 5=missing)
  SHUT[0|1|?]   Shutter disable/enable/status
  SINF          Show OSD info
  SNAM          Show OSD Projector ID
  THRM?         Thermal status
  SERI?         Serial number
  IABS[value|?] Input source (0=VGA, 1=BNC, 2=DVI, 5=Component) 

  See document pw392_communication_protocol.pdf in controller/doc for more details. 
END

    print $help;
    exit(-1);
}
